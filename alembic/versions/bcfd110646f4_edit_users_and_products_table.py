"""Edit users and products table

Revision ID: bcfd110646f4
Revises: e9fc27ec16c7
Create Date: 2025-10-02 18:19:43.074407

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "bcfd110646f4"
down_revision: Union[str, Sequence[str], None] = "e9fc27ec16c7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "attributes", "category_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "products", "name", existing_type=sa.VARCHAR(length=128), nullable=1
    )
    op.alter_column(
        "products",
        "description",
        existing_type=sa.VARCHAR(length=1024),
        nullable=0,
    )
    op.add_column(
        "users", sa.Column("lastname", sa.String(length=128), nullable=False)
    )
    op.add_column(
        "users",
        sa.Column("password_hash", sa.String(length=128), nullable=False),
    )
    op.alter_column(
        "users",
        "firstname",
        existing_type=sa.VARCHAR(length=128),
        nullable=False,
    )
    op.alter_column(
        "users",
        "username",
        existing_type=sa.VARCHAR(length=128),
        nullable=False,
    )
    op.drop_constraint(op.f("users_email_key"), "users", type_="unique")
    op.drop_column("users", "surname")
    op.drop_column("users", "password")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "password", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "surname",
            sa.VARCHAR(length=128),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_unique_constraint(
        op.f("users_email_key"),
        "users",
        ["email"],
        postgresql_nulls_not_distinct=False,
    )
    op.alter_column(
        "users",
        "username",
        existing_type=sa.VARCHAR(length=128),
        nullable=True,
    )
    op.alter_column(
        "users",
        "firstname",
        existing_type=sa.VARCHAR(length=128),
        nullable=True,
    )
    op.drop_column("users", "password_hash")
    op.drop_column("users", "lastname")
    op.alter_column(
        "products",
        "description",
        existing_type=sa.VARCHAR(length=1024),
        nullable=False,
    )
    op.alter_column(
        "products", "name", existing_type=sa.VARCHAR(length=128), nullable=True
    )
    op.alter_column(
        "attributes", "category_id", existing_type=sa.INTEGER(), nullable=True
    )
    # ### end Alembic commands ###
